AWSTemplateFormatVersion: 2010-09-09
Metadata:
  'AWS::CloudFormation::Designer':
    8d708b1e-9182-4534-9e57-c045eb939215:
      size:
        width: 60
        height: 60
      position:
        x: 380
        'y': 260
      z: 0
      embeds: []
    2280bcf3-ad14-4c6e-8c63-ddb05cc8f533:
      size:
        width: 60
        height: 60
      position:
        x: 510
        'y': 220
      z: 0
      embeds: []
      isassociatedwith:
        - 8d708b1e-9182-4534-9e57-c045eb939215
    073c4e89-8950-4545-9b34-39c4db361145:
      size:
        width: 60
        height: 60
      position:
        x: 282.1666666666667
        'y': 278.2916666666667
      z: 0
      embeds: []
    168ab31b-1e69-4d42-bb77-6e2dc9371b7c:
      size:
        width: 80
        height: 100
      position:
        x: 140
        'y': 240
      z: 0
      embeds: []
    f2194dc4-322b-48bd-9811-892e84c434ca:
      size:
        width: 60
        height: 60
      position:
        x: 20
        'y': 180
      z: 0
      embeds: []
Resources:
  S3Bucket:
    Type: 'AWS::S3::Bucket'
    DeletionPolicy: Delete
    Properties:
      BucketName: !Ref DomainName
      WebsiteConfiguration:
        IndexDocument: index.html
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 8d708b1e-9182-4534-9e57-c045eb939215
  BucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: PublicReadGetObject
            Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource: !Join 
              - ''
              - - 'arn:aws:s3:::'
                - !Ref S3Bucket
                - /*
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 2280bcf3-ad14-4c6e-8c63-ddb05cc8f533
  CloudFrontDistribution:
    Type: 'AWS::CloudFront::Distribution'
    Properties:
      DistributionConfig:
        Aliases:
          - !Ref DomainName
        Origins:
          - Id: myS3Bucket
            DomainName: !Join 
              - ''
              - - !Ref DomainName
                - .s3-website.us-east-1.amazonaws.com
            CustomOriginConfig:
              HTTPPort: '80'
              HTTPSPort: '443'
              OriginProtocolPolicy: http-only
        Enabled: 'true'
        DefaultCacheBehavior:
          CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6
          TargetOriginId: myS3Bucket
          AllowedMethods:
            - GET
            - HEAD
          ViewerProtocolPolicy: redirect-to-https
        PriceClass: PriceClass_All
        ViewerCertificate:
          AcmCertificateArn: !Ref CertificateArn
          MinimumProtocolVersion: TLSv1.2_2021
          SslSupportMethod: sni-only
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 073c4e89-8950-4545-9b34-39c4db361145
  R53Configuration:
    Type: 'AWS::Route53::HostedZone'
    Properties:
      Name: !Ref DomainName
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 168ab31b-1e69-4d42-bb77-6e2dc9371b7c
  R53RSConfiguration:
    Type: 'AWS::Route53::RecordSet'
    Properties:
      HostedZoneId: !Ref R53Configuration
      Name: !Ref DomainName
      Type: A
      AliasTarget:
        HostedZoneId: Z2FDTNDATAQYW2
        DNSName: !GetAtt 
          - CloudFrontDistribution
          - DomainName
    Metadata:
      'AWS::CloudFormation::Designer':
        id: f2194dc4-322b-48bd-9811-892e84c434ca
Parameters:
  DomainName:
    Description: The fully qualified domain (e.g. hack3rlife.website)
    Type: String
    Default: hack3rlife.website
  CertificateArn:
    Description: >-
      AcmCertificateArn value (e.g.
      'arn:aws:acm:us-east-1:351946280702:certificate/b1a1c13c-2974-4c09-a1ab-f856a0d74896')
    Type: String